{% use 'form_div_layout.html.twig' %}

{#} Widget {#}
{% block select2_widget %}
{% spaceless %}
<div class="select2-wrapper">
{% if ajax or tags is defined %}
<input type="hidden" id="{{ id }}" name="{{ full_name }}" value="{{ value }}" />
<input type="hidden" id="{{ id }}__label" value="{{ choices_selected|json_encode }}" />
{% else %}
{{ block('choice_widget') }}
{% endif %}
</div>
{% asset_javascript %}
    <script type="text/javascript">
    $( '#{{ id }}' ).select2( {
        {% if minimum_input_length is not null %}minimumInputLength: {{ minimum_input_length }},{% endif %}
        {% if minimum_results_for_search is not null %}minimumResultsForSearch: {{ minimum_results_for_search }},{% endif %}
        {% if maximum_selection_size is not null %}maximumSelectionSize: {{ maximum_selection_size }},{% endif %}
        placeholder: {{ placeholder|default('select2.placeholder')|trans({}, translation_domain)|raw }},
        {% if select_separator is not null %}separator: {{ select_separator|raw }},{% endif %}
        allowClear: {{ allow_clear|raw }},
        {% if ajax or tags is defined %}multiple: {% if multiple|default(false) %}true{% else %}false{% endif %},{% endif %}
        {% if close_on_select is not null %}closeOnSelect: {% if close_on_select %}true{% else %}false{% endif %},{% endif %}
        {% if open_on_enter is not null %}openOnEnter: {% if open_on_enter %}true{% else %}false{% endif %},{% endif %}
        {% if select_id is not null %}id: {{ select_id|raw }},{% endif %}
        {% if matcher is not null %}matcher: {{ matcher|raw }},{% endif %}
        {% if format_result is not null %}formatResult: {{ format_result|raw }},{% endif %}
        {% if format_result_css_class is not null %}formatResultCssClass: {{ format_result_css_class|raw }},{% endif %}
        formatNoMatches: {% if format_no_matches is not null %}{{ format_no_matches|raw }}{% else %}function () { return {{ 'select2.format_no_matches'|trans({}, translation_domain)|raw }}; }{% endif %},
        formatSearching: {% if format_searching is not null %}{{ format_searching|raw }}{% else %}function () { return {{ 'select2.format_searching'|trans({}, translation_domain)|raw }}; }{% endif %},
        formatInputTooShort: {% if format_input_too_short is not null %}{{ format_input_too_short|raw }}{% else %}function (input, min) { return {{ 'select2.format_input_too_short'|trans({}, translation_domain)|raw }}; }{% endif %},
        formatSelectionTooBig: {% if format_selection_too_big is not null %}{{ format_selection_too_big|raw }}{% else %}function (limit) { return {{ 'select2.format_selection_too_big'|trans({}, translation_domain)|raw }}; }{% endif %},
        formatLoadMore: {% if format_load_more is not null %}{{ format_load_more|raw }}{% else %}function (pageNumber) { return {{ 'select2.format_load_more'|trans({}, translation_domain)|raw }}; }{% endif %},
        {% if format_selection is not null %}formatSelection: {{ format_selection|raw }},{% endif %}
        {% if create_search_choice is not null %}createSearchChoice: {{ create_search_choice|raw }},{% elseif tags is defined %}createSearchChoice: function(term, data) {
            if ($(data).filter(function() {
                return this.text.localeCompare(term) === 0;
                }).length === 0) {
                return {
                    id: term,
                    text: term
                };
            }
        },{% endif %}
        {% if ajax or tags is defined %}{% if init_selection is not null %}initSelection: {{ init_selection|raw }},{% else %}initSelection: function (element, callback) {
            var selected = $.parseJSON($( '#{{ id }}__label' ).val());
            {% if multiple %}
            var items = [];
            var values = element.val().split(',');
            $(selected).each(function() {
                if (-1 < $.inArray(this.id+'', values)) {
                    items.push(this);
                }
            });
            callback(items);
            {% else %}
            $(selected).each(function() {
                if (this.id == element.val()) {
                    callback(this);
                    return;
                }
            });
            {% endif %}
        },{% endif %}
        {% endif %}
        {% if tokenizer is not null %}tokenizer: {{ tokenizer|raw }},{% endif %}
        {% if token_separators is not null %}tokenSeparators: {{ token_separators|raw }},{% endif %}
        {% if select_query is not null %}query: {{ select_query|raw }},{% endif %}
        {% if select_ajax is not null %}ajax: {{ select_ajax|raw }}{% elseif ajax %}ajax: {
            url: "{{ ajax_url|raw }}",
            dataType: 'json',
            quietMillis: {{ quiet_millis }},
            data: function (search, pageNumber) {
                var value = $( '#{{ id }}' ).prop( 'value' );
                return {
                    s: search,
                    pn: pageNumber,
                    ps: {{ page_size }},
                    ids : value,
                    ajax_id: "{% if ajax_id is defined and ajax_id != '' %}{{ ajax_id }}{% else %}{{ id }}"{% endif %}
                };
            },
            results: function (data, pageNumber) {
                var more = (pageNumber * {{ page_size }}) < data.length;
                return {results: data.results, more: more};
            }
        },{% endif %}
        {% if select_data is not null %}data: {{ select_data|json_encode|raw }},{% endif %}
        {% if tags is defined %}tags: {{ tags|json_encode|raw }},{% endif %}
        {% if container_css is not null %}containerCss: {{ container_css|raw }},{% endif %}
        {% if container_css_class is not null %}containerCssClass: {{ container_css_class|raw }},{% endif %}
        {% if dropdown_css is not null %}dropdownCss: {{ dropdown_css|raw }},{% endif %}
        {% if dropdown_css_class is not null %}dropdownCssClass: {{ dropdown_css_class|raw }},{% endif %}
        {% if escape_markup is not null %}escapeMarkup: {{ escape_markup|raw }},{% endif %}
        width: '{{ width }}'
    } ){% if ajax or tags is defined %}.change(function(event) {
        var $label = $( '#{{ id }}__label' );
        var lData = $.parseJSON($label.val());
        {% if multiple %}
        if (event.added) {
            lData.push(event.added);
        } else if (event.removed) {
            for (var i=0; i < lData.length;i++) {
                if ( lData[i].id == event.removed.id ) {
                     lData.splice(i, 1);
                 }
            }
        }
        {% else %}
        lData = [$(this).select2('data')];
        {% endif %}
        $label.val(JSON.stringify(lData));
    }){% endif %};
    </script>
{% endasset %}
{% endspaceless %}
{% endblock select2_widget %}

{% block choice_select2_widget %}
{{ block('select2_widget') }}
{% endblock choice_select2_widget %}

{% block language_select2_widget %}
{{ block('select2_widget') }}
{% endblock language_select2_widget %}

{% block country_select2_widget %}
{{ block('select2_widget') }}
{% endblock country_select2_widget %}

{% block timezone_select2_widget %}
{{ block('select2_widget') }}
{% endblock timezone_select2_widget %}

{% block locale_select2_widget %}
{{ block('select2_widget') }}
{% endblock locale_select2_widget %}

{% block entity_select2_widget %}
{{ block('select2_widget') }}
{% endblock entity_select2_widget %}

{% block collection_select2_widget %}
{{ block('select2_widget') }}
{% endblock collection_select2_widget %}
